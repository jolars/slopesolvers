// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// admm_binom
List admm_binom(arma::mat x, arma::vec y, arma::vec lambda, arma::uword max_passes, const double opt, const double opt_tol);
RcppExport SEXP _slopesolvers_admm_binom(SEXP xSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP max_passesSEXP, SEXP optSEXP, SEXP opt_tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type max_passes(max_passesSEXP);
    Rcpp::traits::input_parameter< const double >::type opt(optSEXP);
    Rcpp::traits::input_parameter< const double >::type opt_tol(opt_tolSEXP);
    rcpp_result_gen = Rcpp::wrap(admm_binom(x, y, lambda, max_passes, opt, opt_tol));
    return rcpp_result_gen;
END_RCPP
}
// admm_ols
List admm_ols(arma::mat x, arma::vec y, arma::vec lambda, arma::uword max_passes, const double opt, const double opt_tol);
RcppExport SEXP _slopesolvers_admm_ols(SEXP xSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP max_passesSEXP, SEXP optSEXP, SEXP opt_tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type max_passes(max_passesSEXP);
    Rcpp::traits::input_parameter< const double >::type opt(optSEXP);
    Rcpp::traits::input_parameter< const double >::type opt_tol(opt_tolSEXP);
    rcpp_result_gen = Rcpp::wrap(admm_ols(x, y, lambda, max_passes, opt, opt_tol));
    return rcpp_result_gen;
END_RCPP
}
// amp
List amp(arma::mat x, arma::vec y, arma::vec lambda, arma::uword max_passes, const double opt);
RcppExport SEXP _slopesolvers_amp(SEXP xSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP max_passesSEXP, SEXP optSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type max_passes(max_passesSEXP);
    Rcpp::traits::input_parameter< const double >::type opt(optSEXP);
    rcpp_result_gen = Rcpp::wrap(amp(x, y, lambda, max_passes, opt));
    return rcpp_result_gen;
END_RCPP
}
// cd
List cd(arma::mat x, arma::vec y, arma::vec lambda, arma::uword max_passes);
RcppExport SEXP _slopesolvers_cd(SEXP xSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP max_passesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type max_passes(max_passesSEXP);
    rcpp_result_gen = Rcpp::wrap(cd(x, y, lambda, max_passes));
    return rcpp_result_gen;
END_RCPP
}
// drs
List drs(arma::mat x, arma::vec y, arma::vec lambda, arma::uword max_passes, double epsilon, const double opt);
RcppExport SEXP _slopesolvers_drs(SEXP xSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP max_passesSEXP, SEXP epsilonSEXP, SEXP optSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type max_passes(max_passesSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< const double >::type opt(optSEXP);
    rcpp_result_gen = Rcpp::wrap(drs(x, y, lambda, max_passes, epsilon, opt));
    return rcpp_result_gen;
END_RCPP
}
// fista_binom
List fista_binom(arma::mat x, arma::vec y, arma::vec lambda, arma::uword max_passes, const double opt, const double opt_tol);
RcppExport SEXP _slopesolvers_fista_binom(SEXP xSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP max_passesSEXP, SEXP optSEXP, SEXP opt_tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type max_passes(max_passesSEXP);
    Rcpp::traits::input_parameter< const double >::type opt(optSEXP);
    Rcpp::traits::input_parameter< const double >::type opt_tol(opt_tolSEXP);
    rcpp_result_gen = Rcpp::wrap(fista_binom(x, y, lambda, max_passes, opt, opt_tol));
    return rcpp_result_gen;
END_RCPP
}
// fista_ols
List fista_ols(arma::mat x, arma::vec y, arma::vec lambda, arma::uword max_passes, const double opt, const double opt_tol);
RcppExport SEXP _slopesolvers_fista_ols(SEXP xSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP max_passesSEXP, SEXP optSEXP, SEXP opt_tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type max_passes(max_passesSEXP);
    Rcpp::traits::input_parameter< const double >::type opt(optSEXP);
    Rcpp::traits::input_parameter< const double >::type opt_tol(opt_tolSEXP);
    rcpp_result_gen = Rcpp::wrap(fista_ols(x, y, lambda, max_passes, opt, opt_tol));
    return rcpp_result_gen;
END_RCPP
}
// pn_binom
List pn_binom(arma::mat A, arma::vec b, arma::vec lambda, arma::uword max_passes, const double opt, const double opt_tol);
RcppExport SEXP _slopesolvers_pn_binom(SEXP ASEXP, SEXP bSEXP, SEXP lambdaSEXP, SEXP max_passesSEXP, SEXP optSEXP, SEXP opt_tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type max_passes(max_passesSEXP);
    Rcpp::traits::input_parameter< const double >::type opt(optSEXP);
    Rcpp::traits::input_parameter< const double >::type opt_tol(opt_tolSEXP);
    rcpp_result_gen = Rcpp::wrap(pn_binom(A, b, lambda, max_passes, opt, opt_tol));
    return rcpp_result_gen;
END_RCPP
}
// sparsa
List sparsa(arma::mat x, arma::vec y, arma::vec lambda, arma::uword max_passes, double epsilon, double opt);
RcppExport SEXP _slopesolvers_sparsa(SEXP xSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP max_passesSEXP, SEXP epsilonSEXP, SEXP optSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type max_passes(max_passesSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< double >::type opt(optSEXP);
    rcpp_result_gen = Rcpp::wrap(sparsa(x, y, lambda, max_passes, epsilon, opt));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_slopesolvers_admm_binom", (DL_FUNC) &_slopesolvers_admm_binom, 6},
    {"_slopesolvers_admm_ols", (DL_FUNC) &_slopesolvers_admm_ols, 6},
    {"_slopesolvers_amp", (DL_FUNC) &_slopesolvers_amp, 5},
    {"_slopesolvers_cd", (DL_FUNC) &_slopesolvers_cd, 4},
    {"_slopesolvers_drs", (DL_FUNC) &_slopesolvers_drs, 6},
    {"_slopesolvers_fista_binom", (DL_FUNC) &_slopesolvers_fista_binom, 6},
    {"_slopesolvers_fista_ols", (DL_FUNC) &_slopesolvers_fista_ols, 6},
    {"_slopesolvers_pn_binom", (DL_FUNC) &_slopesolvers_pn_binom, 6},
    {"_slopesolvers_sparsa", (DL_FUNC) &_slopesolvers_sparsa, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_slopesolvers(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
